[
  { "candidate_id": "12345",
    "timestamp": "2025-05-22T15:10:00Z",
    "question_type": "Conceptual",
    "question": "What is the difference between precision and recall, and when would you prioritize one over the other?",
    "answer": "Precision is the ratio of true positive predictions to all positive predictions, indicating accuracy of positive predictions. Recall is the ratio of true positives to all actual positives, measuring how many actual positives were captured. You prioritize precision when false positives are costly (e.g., spam detection), and recall when missing positives is critical (e.g., disease diagnosis).",
    "difficulty": "medium",
    "score": 8,
    "feedback": "Clearly explains the differences and provides relevant examples for prioritization.",
    "sentiment": "positive",
    "duration_seconds": 120
  },
  {
    "candidate_id": "12346",
    "timestamp": "2025-05-22T15:13:00Z",
    "question_type": "Conceptual",
    "question": "Explain the concept of gradient descent and why it is important in training machine learning models.",
    "answer": "Gradient descent is an optimization algorithm used to minimize a model’s loss function by iteratively adjusting model parameters in the direction of the steepest descent of the loss. It is important because it helps models learn the best parameters to fit data by reducing errors progressively.",
    "difficulty": "medium",
    "score": 9,
    "feedback": "Thorough explanation with emphasis on its importance in training.",
    "sentiment": "positive",
    "duration_seconds": 100
  },
  {
    "candidate_id": "12347",
    "timestamp": "2025-05-22T15:15:00Z",
    "question_type": "Technical",
    "question": "What are convolutional neural networks (CNNs) and in what scenarios are they most effective?",
    "answer": "CNNs are specialized neural networks designed to process data with grid-like topology, such as images. They use convolutional layers to automatically and adaptively learn spatial hierarchies of features. CNNs are highly effective in image recognition, video analysis, and other computer vision tasks.",
    "difficulty": "medium",
    "score": 9,
    "feedback": "Detailed and concise explanation with accurate applications.",
    "sentiment": "positive",
    "duration_seconds": 110
  },
  {
    "candidate_id": "12348",
    "timestamp": "2025-05-22T15:18:00Z",
    "question_type": "Conceptual",
    "question": "Describe the difference between batch learning and online learning.",
    "answer": "Batch learning trains models on the entire dataset at once and typically requires retraining with new data. Online learning updates the model incrementally as new data arrives, which is useful for real-time or streaming data applications.",
    "difficulty": "medium",
    "score": 8,
    "feedback": "Good differentiation with clear use-case examples.",
    "sentiment": "positive",
    "duration_seconds": 90
  },
  {
    "candidate_id": "12349",
    "timestamp": "2025-05-22T15:20:00Z",
    "question_type": "Conceptual",
    "question": "How do you interpret the ROC curve and the AUC metric?",
    "answer": "The ROC curve plots the true positive rate against the false positive rate at various classification thresholds. The AUC (Area Under the Curve) quantifies the overall ability of the model to distinguish between classes; an AUC of 1 means perfect classification, 0.5 means random guessing.",
    "difficulty": "medium",
    "score": 9,
    "feedback": "Well-explained with appropriate interpretation of AUC values.",
    "sentiment": "positive",
    "duration_seconds": 105
  },
  {
    "candidate_id": "12350",
    "timestamp": "2025-05-22T15:23:00Z",
    "question_type": "Technical",
    "question": "Can you explain transfer learning and give an example where it is useful?",
    "answer": "Transfer learning involves taking a pre-trained model on a large dataset and fine-tuning it on a smaller, related dataset. This approach reduces training time and improves performance. For example, using a pre-trained ImageNet model for medical image classification.",
    "difficulty": "medium",
    "score": 8,
    "feedback": "Clear explanation of the concept with a practical example.",
    "sentiment": "positive",
    "duration_seconds": 95
  },
  {
    "candidate_id": "12351",
    "timestamp": "2025-05-22T15:26:00Z",
    "question_type": "Problem-Solving",
    "question": "What steps would you take to debug a machine learning model that is performing poorly?",
    "answer": "I would first check data quality and preprocessing steps, ensure labels are correct, analyze feature distributions, and check for data leakage. Next, I’d review model architecture and hyperparameters, validate training and test splits, and use techniques like learning curves to diagnose underfitting or overfitting.",
    "difficulty": "hard",
    "score": 9,
    "feedback": "Comprehensive debugging approach with logical steps.",
    "sentiment": "positive",
    "duration_seconds": 130
  },
  {
    "candidate_id": "12352",
    "timestamp": "2025-05-22T15:29:00Z",
    "question_type": "Conceptual",
    "question": "Explain the role of regularization in machine learning and compare L1 and L2 regularization.",
    "answer": "Regularization adds a penalty to the loss function to prevent overfitting by discouraging overly complex models. L1 regularization (Lasso) can shrink some coefficients to zero, effectively performing feature selection. L2 regularization (Ridge) shrinks coefficients but keeps all features, promoting smaller weights.",
    "difficulty": "medium",
    "score": 8,
    "feedback": "Effective comparison of L1 and L2 regularization with practical implications.",
    "sentiment": "positive",
    "duration_seconds": 100
  },
  {
    "candidate_id": "12353",
    "timestamp": "2025-05-22T15:32:00Z",
    "question_type": "Problem-Solving",
    "question": "How would you approach designing an AI system that needs to explain its decisions to users?",
    "answer": "I would use interpretable models where possible, such as decision trees or linear models. For complex models like neural networks, I’d apply explainability techniques such as SHAP values, LIME, or attention mechanisms to provide insights into decision factors, ensuring transparency and user trust.",
    "difficulty": "hard",
    "score": 9,
    "feedback": "Excellent integration of interpretability tools and user focus.",
    "sentiment": "positive",
    "duration_seconds": 120
  },
  {
    "candidate_id": "12354",
    "timestamp": "2025-05-22T15:35:00Z",
    "question_type": "Technical",
    "question": "What are generative adversarial networks (GANs), and what are their common applications?",
    "answer": "GANs consist of two neural networks—a generator and a discriminator—that compete to improve each other. The generator creates fake data while the discriminator tries to distinguish real from fake. GANs are widely used in image generation, data augmentation, and style transfer.",
    "difficulty": "hard",
    "score": 9,
    "feedback": "Accurate explanation with relevant examples of applications.",
    "sentiment": "positive",
    "duration_seconds": 130
  },
  {
    "candidate_id": "12355",
    "timestamp": "2025-05-22T15:30:00Z",
    "question_type": "medium",
    "question": "How do recurrent neural networks (RNNs) differ from feedforward neural networks?",
    "answer": "Recurrent Neural Networks (RNNs) are designed to handle sequences by maintaining a form of memory through feedback loops, where the output of one step is fed back as input for the next. This cyclical connection allows RNNs to capture dependencies over time, making them ideal for tasks like speech recognition or time-series forecasting. On the other hand, feedforward neural networks process inputs in a single pass from input to output without retaining information about previous inputs, so they lack the capability to model temporal or sequential data.",
    "difficulty": "hard",
    "score": 4,
    "feedback": "Good explanation of RNNs and feedforward differences, could add examples.",
    "sentiment": "positive",
    "duration_seconds": 120
  },
  {
    "candidate_id": "12356",
    "timestamp": "2025-05-22T15:35:00Z",
    "question_type": "medium",
    "question": "Explain the concept of hyperparameter tuning and common methods to perform it.",
    "answer": "Hyperparameter tuning is the process of systematically searching for the most effective set of hyperparameters — such as learning rate, batch size, or number of layers — that improve a model’s predictive performance. Since these parameters are not learned during training, they must be selected beforehand. Common strategies include grid search, which tries all combinations in a specified set; random search, which samples parameter values randomly; and more sophisticated methods like Bayesian optimization, which uses past evaluations to inform the next choice, or genetic algorithms that simulate evolution to find optimal parameters.",
    "difficulty": "hard",
    "score": 5,
    "feedback": "Clear and concise explanation of hyperparameter tuning and methods.",
    "sentiment": "positive",
    "duration_seconds": 150
  },
  {
    "candidate_id": "12357",
    "timestamp": "2025-05-22T15:40:00Z",
    "question_type": "hard",
    "question": "What ethical considerations should AI engineers keep in mind while developing AI systems?",
    "answer": "AI engineers must prioritize creating systems that are fair, transparent, and respect user privacy. This includes avoiding biases that could lead to unfair treatment of individuals or groups and ensuring that AI decisions can be explained and understood by humans. Accountability is critical—engineers should anticipate the potential social impacts of their AI and establish mechanisms for oversight and correction. Additionally, protecting sensitive data and maintaining user trust are essential to ethical AI development.",
    "difficulty": "hard",
    "score": 5,
    "feedback": "Excellent coverage of ethical considerations in AI development.",
    "sentiment": "positive",
    "duration_seconds": 180
  }
]
